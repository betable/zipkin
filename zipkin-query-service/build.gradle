apply plugin: 'com.github.johnrengelman.shadow'
ext.mainClassName = 'com.twitter.zipkin.query.Main'

task run(type:JavaExec) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    // When configKey == "dev", run out of the collector's directory to reuse zipkin.db
    workingDir configKey == "dev" ? project(':zipkin-collector-service').buildDir : project.buildDir
    // See gradle.properties for an explanation of configKey
    args '-f', "${projectDir}/config/query-${configKey}.scala"
}

jar.manifest.attributes 'Main-Class': mainClassName

tasks.build.dependsOn(shadowJar)
artifacts.zipkinUpload shadowJar

repositories {
    // For dependencies of zipkin-cassandra
    maven { url 'http://conjars.org/repo' }
}

dependencies {
    compile project(':zipkin-query')
    compile project(':zipkin-cassandra')
    compile project(':zipkin-redis')
    compile project(':zipkin-anormdb')
    compile anormDriverDependencies["mysql"] // for query-mysql
    compile "org.slf4j:slf4j-simple:" + commonVersions.slf4j

    compile "com.twitter:finagle-zipkin_${scalaInterfaceVersion}:${commonVersions.finagle}"
}

sourceSets.main.resources.srcDirs += ['config']
apply from: "${rootDir}/gradle/idea-mark-config-dir-as-resource.gradle"

